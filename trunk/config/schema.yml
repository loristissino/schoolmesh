propel:
  track:
    id:           ~
    shortcut:     { type: varchar(3), index: true, unique: true }
    description:  { type: varchar(255), required: true }

  schoolclass:
    id:           { type: varchar(5), primaryKey: true }
    grade:        { type: integer, required: true }
    section:      { type: varchar(3), required: true }
    track_id:   
    description:  { type: varchar(255), required: false }

  year:
    id:           { type: integer, required: true, primaryKey: true, autoIncrement: false }
    description:  { type: varchar(7), unique: true }

  subject:
    id:           ~
    shortcut:     { type: varchar(3), index: true, required: true, unique: true }
    description:  { type: varchar(255), required: true }
    rank:     integer

  sf_guard_user_profile:
    _attributes:  { phpName: sfGuardUserProfile }
    user_id:      { type: integer, foreignTable: sf_guard_user, foreignReference: id, required: true, onDelete: cascade, onUpdate: cascade, primaryKey: true }
    first_name:   varchar(50)
    middle_name:  varchar(50)
    last_name:    varchar(50)
    pronunciation: varchar(100)
    role_id:      ~
    gender:      varchar(1)
    email:        varchar(50)
    email_state: { type: integer, default: 0 }
    email_verification_code: varchar(32)
    birthdate:    date
    birthplace:   varchar(50)
    import_code:  varchar(20)
    posix_uid:    integer
    disk_set_soft_blocks_quota: { type: integer, default: 0 }
    disk_set_hard_blocks_quota: { type: integer, default: 0 }
    disk_set_soft_files_quota: { type: integer, default: 0 }
    disk_set_hard_files_quota: { type: integer, default: 0 }
    disk_used_blocks: { type: integer, default: 0 }
    disk_used_files: { type: integer, default: 0 }
    disk_updated_at: timestamp
    system_alerts: varchar(255)
    is_scheduled_for_deletion: { type: boolean, default: false }
    googleapps_account_status: integer
    googleapps_account_lastlogin_at: timestamp
    googleapps_account_approved_at: timestamp
    googleapps_account_temporary_password: varchar(10)
    moodle_account_status: integer
    moodle_account_temporary_password: varchar(10)
    system_account_status: integer
    system_account_is_locked: boolean

# notes about Google Apps accounts:
#
#  googleapps_account_status:
#        this is set when the user list in csv format is downloaded from google and uploaded to schoolmesh, if the user is found in it
#        possible values:
#        0: the account does not exist
#        1: the account exists, but was never used (first login = 0)
#        3-7: reserved
#        8: the account exists, and was used (last time more than a month ago)
#        9: the account exists, and was used recently (last time less than a month ago)
#  googleapps_account_approved:
#        it is timestamped when the user provides the agreement signed by him or the parents
#        if it is set to null, it means that the account is not yet approved (so the user will not show up in the user list to be sent to google)
#  googleapps_account_temporary_password:
#        it is generated when the google account is approved
#        it is needed to produce the letter with instructions for the user
#        it is set to null when we discover that the user has done a successful login

  reserved_username:
    id:   
    username: { type: varchar(20), index: true }

#  sf_guard_group_profile:
#    _attributes:  { phpName: sfGuardGroupProfile }
#    id:
#    group_id:     { type: integer, foreignTable: sf_guard_group, foreignReference: id, required: true, onDelete: cascade }
#    priority:     integer # used to determine Primary Group for users, which will be set to the lowest
#    quality_code: varchar(10)

  appointment:
    id: ~
    user_id:          { type: integer, foreignTable: sf_guard_user, foreignReference: id, onDelete: restrict, onUpdate: cascade, required: true }
    subject_id:       { type: integer, foreignTable: subject, foreignReference: id, onDelete: restrict, onUpdate: cascade, required: true }
    schoolclass_id:   { type: varchar(5), foreignTable: schoolclass, foreignReference: id, onDelete: restrict, onUpdate: cascade, required: true }
    year_id:          { type: integer, foreignTable: year, foreignReference: id, onDelete: restrict, onUpdate: cascade, required: true }
    state:             { type: integer }
    created_at:   
    updated_at:
    import_code:  varchar(20)
    _uniques:
      ussy: [user_id, subject_id, schoolclass_id, year_id]

  enrolment:
    id: ~
    user_id:          { type: integer, foreignTable: sf_guard_user, foreignReference: id, onDelete: restrict, onUpdate: cascade, required: true }
    schoolclass_id:   { type: varchar(5), foreignTable: schoolclass, foreignReference: id, onDelete: restrict, onUpdate: cascade, required: true }
    year_id:          { type: integer, foreignTable: year, foreignReference: id, onDelete: restrict, onUpdate: cascade, required: true }
    created_at:   
    updated_at:
    import_code:  varchar(20)
    _uniques:
      usy: [user_id, schoolclass_id, year_id]
    

  team:
    id:           ~
    description:  varchar(100)
    posix_name:   varchar(20)
#    priority:     integer # used to determine Primary Group for users, which will be set to the lowest
    quality_code: varchar(10)
    
  role:
    id:           ~
    description:  varchar(100)
    quality_code: varchar(10)        
    posix_name: varchar(20)
    may_be_main_role: boolean

  user_team:
    id: ~
    user_id:      { type: integer, foreignTable: sf_guard_user, foreignReference: id, onDelete: restrict, onUpdate: cascade, required: true }
    team_id:     { type: integer, foreignTable: team, foreignReference: id, onDelete: restrict, onUpdate: cascade, required: true  }
    role_id:       { type: integer, foreignTable: role, foreignReference: id, onDelete: restrict, onUpdate: cascade, required: true }
    _uniques:
      utr: [user_id, team_id, role_id]

#  workplan:
#    id:  ~
#    user_id:  	{ type: integer, foreignTable: sf_guard_user, foreignReference: id, onDelete: restrict }
#    year_id:  { type: integer, foreignTable: year, foreignReference: id, onDelete: restrict, required: true }
#    schoolclass_id:   { type: varchar(5), foreignTable: schoolclass, foreignReference: id, onDelete: restrict, required: true }
#    subject_id:   { type: integer, foreignTable: subject, foreignReference: id, onDelete: restrict, required: true }
#    _uniques:
#      uyss: [user_id, year_id, schoolclass_id, subject_id]

  wpevent:
    id:  ~
    created_at: ~
    appointment_id: ~
    user_id:  	{ type: integer, foreignTable: sf_guard_user, foreignReference: id, onDelete: restrict, onUpdate: cascade }
    comment:   { type: varchar(255) }
    state:  integer


  wpinfo_type:
    id:          ~
    title:        varchar(50)
    description:  varchar(200)
    rank:    { type: integer, required: true }
    state:  integer
    template:     longvarchar
    example:     longvarchar
    is_required:  boolean
    is_reserved: boolean
# state indicates in which of workplan's state this item type should be shown
# is_reserved indicates that this field should not be published and should be seen only by the schoolmaster 

  wpinfo:
    id: ~
    appointment_id:   ~
    wpinfo_type_id:  ~
    updated_at: 
    content:   longvarchar

  wptool_item_type:
    id:         ~
    description:  varchar(50)
    rank:   integer
    state: integer
    min_selected: integer
    max_selected: integer

  wptool_item:
    id:   ~
    description: varchar(50);
    wptool_item_type_id: ~

  wptool_appointment:
    appointment_id:  { type: integer, foreignTable: appointment, foreignReference: id, required: true, onDelete: cascade, onUpdate: cascade, primaryKey: true }
    wptool_item_id:  { type: integer, foreignTable: wptool_item, foreignReference: id, required: true, onDelete: restrict, onUpdate: cascade, primaryKey: true }

  wpmodule:
    id:         ~
    user_id:      { type: integer, foreignTable: sf_guard_user, foreignReference: id, onDelete: cascade, onUpdate: cascade }
    title:        varchar(100)
    period:       varchar(100)
    appointment_id:   
    rank:       integer
    is_public:    boolean
    created_at:   ~
    updated_at:   ~

  wpitem_type:
    id:          ~
    title:        varchar(50)
    singular: varchar(50)
    description:  varchar(200)
    style:       varchar(50)
    rank:    { type: integer, required: true }
    state:  integer
    is_required: boolean
    evaluation_min:  integer
    evaluation_max:  integer
    evaluation_min_description: varchar(50)
    evaluation_max_description: varchar(50)
# state indicates in which of workplan's state this item type should be shown

  wpitem_group:
    id:           ~
    wpitem_type_id:  ~
    wpmodule_id:  { type: integer, foreignTable: wpmodule, foreignReference: id, onDelete: cascade, onUpdate: cascade, required: true  }
    _uniques:
      iti_mi: [wpitem_type_id, wpmodule_id]

  wpmodule_item:
    id:           ~
    wpitem_group_id: { type: integer, foreignTable: wpitem_group, foreignReference: id, onDelete: cascade, onUpdate: cascade, required: true  }
    rank:    { type: integer, required: true }
    content:      longvarchar
    evaluation:  { type: integer, required: false } 
    is_editable: boolean
    _uniques:
      id_pos:     [id, rank]

  subnet:
    id:
    name:   { type: varchar(40), index: true, unique: true }
    ip_cidr:     { type: varchar(20), required: false }

  workstation:
    id:          
    name:    { type: varchar(40), index: true, unique: true }
    ip_cidr:   { type: varchar(20), required: true, unique: true }
    mac_address: { type: varchar(17), required: false, unique: true }
    is_enabled: { type: boolean, default: false }
    subnet_id: ~

  lanlog:
    id: ~
    user_id:          { type: integer, foreignTable: sf_guard_user, foreignReference: id, onDelete: restrict, onUpdate: cascade, required: true }
    workstation_id:  { type: integer, foreignTable: workstation, foreignReference: id, onDelete: restrict, onUpdate: cascade, required: true}
    created_at: 
    updated_at:
    is_online: { type: boolean, required: true, default: 0 }


  service:
    id:
    name: { type: varchar(40), index: true, unique: true }
    is_enabled_by_default: { type: boolean, default: 0 }
    port:   { type: integer, required: true }
    is_udp:  { type: boolean, default: 0 }
    _uniques:
      port_is_udp:  [port, is_udp]


  workstation_service:
    workstation_id: { type: integer, primaryKey: true, required: true, foreignTable: workstation, foreignReference: id, onDelete: cascade, onUpdate: cascade }
    service_id: { type: integer, primaryKey: true, required: true, foreignTable: service, foreignReference: id, onDelete: cascade, onUpdate: cascade }
    
  subnet_service:
    subnet_id: { type: integer, primaryKey: true, required: true, foreignTable: subnet, foreignReference: id, onDelete: cascade, onUpdate: cascade }
    service_id: { type: integer, primaryKey: true, required: true, foreignTable: service, foreignReference: id, onDelete: cascade, onUpdate: cascade }
    

  system_message:
    id:
    key: varchar(30)
    _uniques:
      key: [key]

  system_message_i18n:
    content: varchar(255)  
