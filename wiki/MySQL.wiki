#summary Configurazione di MySQL server
#labels Phase-Deploy

= MySQL =

1. Accertarsi che il server MySQL sia in funzione:

{{{
$ sudo /etc/init.d/mysql status
 * /usr/bin/mysqladmin  Ver 8.41 Distrib 5.0.67, for debian-linux-gnu on i486
Copyright (C) 2000-2006 MySQL AB
This software comes with ABSOLUTELY NO WARRANTY. This is free software,
and you are welcome to modify and redistribute it under the GPL license

Server version		5.0.67-0ubuntu6
Protocol version	10
Connection		Localhost via UNIX socket
UNIX socket		/var/run/mysqld/mysqld.sock
Uptime:			3 hours 52 min 11 sec

Threads: 1  Questions: 5771  Slow queries: 1  Opens: 3984  Flush tables: 1  Open tables: 64  Queries per second avg: 0.414
}}}

2. Creare, con l'interfaccia preferita (ad esempio con phpMyAdmin), un utente _schoolmesh_ e i tre database necessari:

  * `schoolmesh` (database per le prove)
  * `schoolmesh_test` (database per i test automatizzati)
  * `schoolmesh_prod` (database di produzione, da usare con i dati veri)

Dovrebbero essere sufficienti i seguenti comandi SQL (ovviamente va sostituita la password):

{{{
CREATE DATABASE `schoolmesh` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;

CREATE DATABASE `schoolmesh_prod` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;

CREATE DATABASE `schoolmesh_test` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;

CREATE USER 'schoolmesh'@'localhost' IDENTIFIED BY 'seGreTo';

GRANT ALL PRIVILEGES ON `schoolmesh` . * TO 'schoolmesh'@'localhost' WITH GRANT OPTION ;

GRANT ALL PRIVILEGES ON `schoolmesh` . * TO 'schoolmesh_prod'@'localhost' WITH GRANT OPTION ;

GRANT ALL PRIVILEGES ON `schoolmesh` . * TO 'schoolmesh_dev'@'localhost' WITH GRANT OPTION ;

}}}

3. Modificare il file _config/databases.yml_ impostando la password scelta per l'utente _schoolmesh_:

{{{
dev:
  propel:
    param:
      classname: DebugPDO
test:
  propel:
    class: sfPropelDatabase
    param:
      classname: DebugPDO
      dsn: 'mysql:host=localhost;dbname=schoolmesh_test'
prod:
  propel:
    class: sfPropelDatabase
    param:
      dsn: 'mysql:host=localhost;dbname=schoolmesh_prod'
all:
  propel:
    class: sfPropelDatabase
    param:
      dsn: 'mysql:dbname=schoolmesh;host=localhost'
      username: schoolmesh
      password: seGreTo
      encoding: utf8
      persistent: true
      pooling: true
      classname: PropelPDO
}}}

4. Creare la struttura dei database:

{{{
cd /var/schoolmesh
symfony propel:insert-sql --no-confirmation
symfony propel:insert-sql --env=test --no-confirmation
symfony propel:insert-sql --env=prod --no-confirmation
}}}

5. Caricare i dati di prova nel database di prova:

{{{
$ cd /var/schoolmesh
$ symfony propel:data-load
}}}

Passo successivo: [ModificheLocali Modifiche locali e personalizzazioni]