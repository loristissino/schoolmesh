propel:
  track:
    id:           ~
    shortcut:     { type: varchar(3), index: unique }
    description:  { type: varchar(255), required: true }

  schoolclass:
    id:           { type: varchar(5), primaryKey: true }
    grade:        { type: integer, required: true }
    section:      { type: varchar(3), required: true }
    track_id:   
    description:  { type: varchar(255), required: false }
    is_active:    { type: boolean, default: true }

  year:
    id:           { type: integer, required: true, primaryKey: true, autoIncrement: false }
    description:  { type: varchar(7), index: unique }
    start_date:   { type: date }
    end_date:     { type: date }

  term:
    id:           { type: varchar(10), primaryKey: true }
    description:  { type: varchar(100), required: true }
    end_day:      { type: integer, required: true } 
    # the number of days, following the start date of the year, when the term finishes (an approx. value, used for comparison between years if necessary)
    has_formal_evaluation: boolean

  subject:
    id:           ~
    shortcut:     { type: varchar(3), index: unique, required: true }
    description:  { type: varchar(255), required: true }
    rank:         integer
    is_active:    { type: boolean, default: true }

  suggestion:
    id: ~
    shortcut:     { type: varchar(20), index: unique, required: true }
    content:      { type: varchar(255), required: true }
    is_selectable: boolean
    rank:          integer

  recuperation_hint:
    id: ~
    user_id:      { type: integer, foreignTable: sf_guard_user, foreignReference: id, required: false, onUpdate: cascade, onDelete: cascade, index:true }
    content:      { type: varchar(255), required: true }
    is_selectable: boolean
    rank:  integer

  sf_guard_user_profile:
    _attributes:  { phpName: sfGuardUserProfile }
    user_id:      { type: integer, foreignTable: sf_guard_user, foreignReference: id, required: true, onUpdate: cascade, onDelete: cascade, primaryKey: true }
    lettertitle:        varchar(10)  # the title to be used in formal letters
    first_name:   varchar(50)
    middle_name:  varchar(50)
    last_name:    varchar(50)
    pronunciation: varchar(100)
    city:         varchar(100)
    address:      varchar(100)
    info:         longvarchar
    role_id:      ~
    gender:       varchar(1)
    email:        varchar(50)
    email_state:  { type: integer, default: 0 }
    email_verification_code: varchar(40)
    mobile:       { type: varchar(15), default: null }
    website:      { type: varchar(255), default: null }
    office:       { type: varchar(255), default: null }
    ptn_notes:    { type: varchar(255), default: null }  # parent-teacher-night
    birthdate:    date
    birthplace:   varchar(50)
    import_code:  varchar(20)
    system_alerts: varchar(255)
    is_scheduled_for_deletion: { type: boolean, default: false }
    prefers_richtext: { type: boolean, default: true }
    preferred_format: varchar(5)
    preferred_culture: varchar(7)
    last_action_at: timestamp
    last_login_at: timestamp
    plaintext_password: varchar(32)  # this is the random password that is set for new users - we must store it for letters generation
    encrypted_password: varchar(255) # the password is kept here for synchronization purposes, only for the needed time

  sf_guard_user_security:
    _attributes:  { phpName: sfGuardUserSecurity }
    user_id:      { type: integer, foreignTable: sf_guard_user, foreignReference: id, required: true, onUpdate: cascade, onDelete: cascade, primaryKey: true }
    last_login_attempt_at: timestamp
    trusted_browsers_serialized: longvarchar # a serialized arrays of cookie values set on browsers marked as trusted by the user
    initialization_key: { type: varchar(32), required: false, default: null }  # used for two-factor authentication
    created_at:   ~
    updated_at:   ~

  account_type:
    id:
    name:           { type: varchar, size: 255, required: true, index: unique }
    description:    { type: longvarchar }
    is_external:    { type: boolean, required: true }
    rank:    integer

  account:
    id:   
    user_id:        { type: integer, foreignTable: sf_guard_user, foreignReference: id, required: true, onUpdate: cascade, onDelete: cascade, index:true }
    account_type_id: { type: integer, foreignTable: account_type, foreignReference: id, required: true, onDelete: restrict, index: true }
    info:           longvarchar
    settings:       longvarchar
    exists:         boolean
    is_locked:      boolean
    temporary_password: varchar(10)
    info_updated_at: timestamp
    last_known_login_at: timestamp
    quota_percentage: integer
    updated_at: ~
    created_at: ~
    _uniques:
      ua: [user_id, account_type_id]
# info: it is a serialized array of information read from the actual system in which the account is present
# settings: it is a serialized array of information that should be set in the actual system
# quota_percentage: an integer in the range 0-100
# is_locked: true if it is locked (suspended), false if it is active, null if unknown


  reserved_username:
    id:   
    username:       { type: varchar(20), index: unique }
    aliases_to:     { type: varchar(20), index: true }


  syllabus:
    id: ~
    name:          varchar(50)
    version:       varchar(20)
    author:        varchar(50)
    href:          varchar(255)
    is_active:     { type: boolean, default: true }
    evaluation_min:  integer
    evaluation_max:  integer
    evaluation_min_description: varchar(50)
    evaluation_max_description: varchar(50)

  syllabus_item:
    syllabus_id: ~
    id: ~
    rank:          integer
    ref:           varchar(24)
    level:         integer
    parent_id:     { type: integer, foreignTable: syllabus_item, foreignReference: id, required: false, onDelete: restrict, onUpdate: cascade, index:true }
    content:       longvarchar
    is_selectable: { type: boolean, default: false }
    _uniques:
      ir: [syllabus_id, ref]
      

  appointment_type:
    id: ~
    description:      { type: varchar(255) }
    shortcut:         { type: varchar(10), index: unique }
    rank:             { type: integer, index: true }
    is_active:        { type: boolean, default: true }
    has_info:         { type: boolean, default: false }
    has_modules:      { type: boolean, default: false }
    has_tools:        { type: boolean, default: false }
    has_attachments:  { type: boolean, default: false }

  appointment:
    id: ~
    user_id:          { type: integer, foreignTable: sf_guard_user, foreignReference: id, onDelete: restrict, onUpdate: cascade, required: true }
    subject_id:       { type: integer, foreignTable: subject, foreignReference: id, onDelete: restrict, onUpdate: cascade, required: false }
    schoolclass_id:   { type: varchar(5), foreignTable: schoolclass, foreignReference: id, onDelete: restrict, onUpdate: cascade, required: false }
    team_id:          { type: integer, foreignTable: team, foreignReference: id, onDelete: restrict, onUpdate: cascade, required: false }
    year_id:          { type: integer, foreignTable: year, foreignReference: id, onDelete: restrict, onUpdate: cascade, required: true }
    state:             { type: integer }
    hours:            { type: integer, default: 0 }
    is_public:         { type: boolean }
    syllabus_id: ~
    appointment_type_id: ~
    created_at:   
    updated_at:
    import_code:  varchar(20)
    _uniques:
      usasy: [user_id, subject_id, appointment_type_id, schoolclass_id, year_id]

  enrolment:
    id: ~
    user_id:          { type: integer, foreignTable: sf_guard_user, foreignReference: id, onDelete: restrict, onUpdate: cascade, required: true }
    schoolclass_id:   { type: varchar(5), foreignTable: schoolclass, foreignReference: id, onDelete: restrict, onUpdate: cascade, required: true }
    year_id:          { type: integer, foreignTable: year, foreignReference: id, onDelete: restrict, onUpdate: cascade, required: true }
    info: longvarchar
    created_at:   
    updated_at:
    import_code:  varchar(20)
    _uniques:
      usy: [user_id, year_id]
    

  team:
    id:           ~
    description:  varchar(100)
    posix_name:   varchar(20)
    quality_code: varchar(10)
    needs_folder: { type: boolean, default: false }
    needs_mailing_list:  { type: boolean, default: false }
    is_public:    { type: boolean, default: false }
    
  role:
    id:           ~
    male_description:  varchar(100)
    female_description:  varchar(100)
    quality_code: varchar(10)        
    posix_name: varchar(20)
    may_be_main_role: boolean
    needs_charge_letter: boolean
    is_key: { type: boolean, default: false }
    default_guardgroup: varchar(20)
    min: { type: integer, default: 0 }
    # the minimum number of assignees for this role (0 to not set)
    max:  { type: integer, default: 0 }
    # the maximum number of assignees for this role (0 to not set)
    forfait_retribution: { type: decimal, size: 10, scale: 2 }
    charge_notes: longvarchar
    confirmation_notes: longvarchar
    charge_havingregardto: longvarchar        # see http://tinyurl.com/94aa9cv
    confirmation_havingregardto: longvarchar  # see http://tinyurl.com/94aa9cv
    rank: integer

  user_team:
    id: ~
    user_id:     { type: integer, foreignTable: sf_guard_user, foreignReference: id, onDelete: restrict, onUpdate: cascade, required: true }
    team_id:     { type: integer, foreignTable: team, foreignReference: id, onDelete: restrict, onUpdate: cascade, required: true  }
    role_id:     { type: integer, foreignTable: role, foreignReference: id, onDelete: restrict, onUpdate: cascade, required: true }
    expiry:      { type: date }  
    notes:       longvarchar
    details:     longvarchar
                 # this field contains a serialized array, which could be useful for storage of different kinds of data
    charge_reference_number: { type: varchar(20), default: null } 
    confirmation_reference_number: { type: varchar(20), default: null } 
    _uniques:
      utr: [user_id, team_id]

  wfevent:
    id:  ~
    base_table: integer
    base_id: integer
    created_at: ~
    user_id:  	{ type: integer, foreignTable: sf_guard_user, foreignReference: id, onDelete: restrict, onUpdate: cascade }
    comment:   { type: varchar(255) }
    state:  integer

  wpinfo_type:
    id:                  ~
    title:               varchar(50)
    description:         varchar(255)
    rank:                { type: integer, required: true, index: true }
    code:                { type: varchar(30), index: true }
    state_min:           { type: integer, default: 10, index: true }
    state_max:           { type: integer, default: 10, index: true }
    template:            longvarchar
    example:             longvarchar
    is_required:         { type: boolean, default: true }
    is_confidential:     { type: boolean, default: false }
    grade_min:           { type: integer, default: 1, index: true }
    grade_max:           { type: integer, default: 5, index: true }
    appointment_type_id: ~
# state indicates in which of workplan's state this item type should be shown
# is_confidential indicates that this field should not be published and should be seen only by the schoolmaster 

  wpinfo:
    id: ~
    appointment_id:   ~
    wpinfo_type_id:  ~
    updated_at: 
    content:   longvarchar

  wptool_item_type:
    id:                  ~
    description:         varchar(50)
    rank:                { type: integer, index: true }
    appointment_type_id: ~
    state_min:           { type: integer, default: 10, index: true }
    state_max:           { type: integer, default: 10, index: true }
    min_selected:        integer
    max_selected:        integer
    grade_min:           { type: integer, default: 1 }
    grade_max:           { type: integer, default: 5 }

  wptool_item:
    id:   ~
    description: varchar(50)
    rank:                { type: integer, index: true }
    code:                { type: varchar(30), index: true }    
    wptool_item_type_id: ~

  wptool_appointment:
    appointment_id:  { type: integer, foreignTable: appointment, foreignReference: id, required: true, onDelete: cascade, onUpdate: cascade, primaryKey: true }
    wptool_item_id:  { type: integer, foreignTable: wptool_item, foreignReference: id, required: true, onDelete: restrict, onUpdate: cascade, primaryKey: true }

  wpmodule:
    id:         ~
    user_id:      { type: integer, foreignTable: sf_guard_user, foreignReference: id, onDelete: cascade, onUpdate: cascade }
    title:        varchar(255)
    period:       varchar(255)
    hours_estimated:    { type:  integer, default: 0 }
    hours_used:     { type:  integer, default: 0 }
    appointment_id:   
    rank:       integer
    is_public:    boolean
    created_at:   ~
    updated_at:   ~

  wpitem_type:
    id:          ~
    title:        varchar(50)
    singular: varchar(50)
    description:  varchar(200)
    style:       varchar(50)
    rank:    { type: integer, required: true }
    state_min:           { type: integer, default: 10, index: true }
    state_max:           { type: integer, default: 10, index: true }
    is_required: boolean
    appointment_type_id: ~
    code: { type: varchar(30), index: true }
    evaluation_min:  integer
    evaluation_max:  integer
    evaluation_min_description: varchar(50)
    evaluation_max_description: varchar(50)
# state indicates in which of workplan's state this item type should be shown
# code is needed to make it possible copying similar items where the syllabus is not the same
    grade_min:            { type: integer, default: 1 }
    grade_max:            { type: integer, default: 5 }
    _uniques:
      sc: [appointment_type_id, code]


  wpitem_group:
    id:           ~
    wpitem_type_id:  ~
    wpmodule_id:  { type: integer, foreignTable: wpmodule, foreignReference: id, onDelete: cascade, onUpdate: cascade, required: true  }
    _uniques:
      iti_mi: [wpitem_type_id, wpmodule_id]

  wpmodule_item:
    id:           ~
    wpitem_group_id: { type: integer, foreignTable: wpitem_group, foreignReference: id, onDelete: cascade, onUpdate: cascade, required: true  }
    rank:    { type: integer, required: true }
    content:      longvarchar
    evaluation:  { type: integer, required: false } 
    is_editable: boolean
    _uniques:
      id_pos:     [id, rank]

  student_situation:
    id:     ~
    term_id:           { type: varchar(10), foreignTable: term, foreignReference: id, onDelete: restrict, onUpdate: cascade, required: true }
    wpmodule_item_id:   { type: integer, foreignTable: wpmodule_item, foreignReference: id, onDelete: cascade, onUpdate: cascade, required: true  }
    user_id:  	{ type: integer, foreignTable: sf_guard_user, foreignReference: id, onDelete: restrict, onUpdate: cascade, required: true }
    evaluation:  integer
    _uniques:
      twu:     [term_id, wpmodule_item_id, user_id]

  student_suggestion:
    id:     ~
    term_id:           { type: varchar(10), foreignTable: term, foreignReference: id, onDelete: restrict, onUpdate: cascade, required: true }
    appointment_id:   { type: integer, foreignTable: appointment, foreignReference: id, required: true, onDelete: cascade, onUpdate: cascade, primaryKey: true }
    user_id:  	{ type: integer, foreignTable: sf_guard_user, foreignReference: id, onDelete: restrict, onUpdate: cascade, required: true }
    suggestion_id: ~
    _uniques:
      taus:     [term_id, appointment_id, user_id, suggestion_id]

  student_hint:
    id:     ~
    term_id:           { type: varchar(10), foreignTable: term, foreignReference: id, onDelete: restrict, onUpdate: cascade, required: true }
    appointment_id:   { type: integer, foreignTable: appointment, foreignReference: id, required: true, onDelete: cascade, onUpdate: cascade, primaryKey: true }
    user_id:  	{ type: integer, foreignTable: sf_guard_user, foreignReference: id, onDelete: restrict, onUpdate: cascade, required: true }
    recuperation_hint_id: ~
    _uniques:
      taur:     [term_id, appointment_id, user_id, recuperation_hint_id]

  student_syllabus_item:
    id:     ~
    term_id:           { type: varchar(10), foreignTable: term, foreignReference: id, onDelete: restrict, onUpdate: cascade, required: true }
    appointment_id:   { type: integer, foreignTable: appointment, foreignReference: id, required: true, onDelete: cascade, onUpdate: cascade, primaryKey: true }
    user_id:  	{ type: integer, foreignTable: sf_guard_user, foreignReference: id, onDelete: restrict, onUpdate: cascade, required: true }
    syllabus_item_id: ~
    _uniques:
      taus:     [term_id, appointment_id, user_id, syllabus_item_id]

  wpmodule_syllabus_item:
    id: ~
    wpmodule_id: ~
    syllabus_item_id: ~
    contribution: integer  # 1 for partial contribution, 2 for focussed contribution
    evaluation: { type: integer, required: false }   # set to -1 for not to be evaluated (duplicates)
    _uniques:
      ws: [wpmodule_id, syllabus_item_id]

  schoolproject:
    id: ~
    proj_category_id: ~
    code:         { type: varchar(10), index: true }
    year_id:      { type: integer, foreignTable: year, foreignReference: id, onDelete: restrict, onUpdate: cascade, required: true }
    user_id:      { type: integer, foreignTable: sf_guard_user, foreignReference: id, onDelete: restrict, onUpdate: cascade, required: true }
    team_id:      { type: integer, foreignTable: team, foreignReference: id, onDelete: restrict, onUpdate: cascade, required: false }  # people delegated by the coordinator to do some of his/her activities
    title:        { type: varchar(255), index: true }
    hours_approved: integer
    state:        { type: integer }
    submission_date: date
    reference_number: varchar(20)
    approval_date: date
    approval_notes: longvarchar
    financing_date: date    
    financing_notes: longvarchar
    confirmation_date:  date    
    confirmation_notes: longvarchar
    evaluation_min: integer  # the minimum value for evaluations of upshots of this project
    evaluation_max: integer  # the minimum value for evaluations of upshots of this project
    no_activity_confirm: { type: boolean, default: false }
    created_at: ~
    

  proj_category:
    id: ~
    title:     varchar(255)
    rank:      { type: integer, required: true }
    resources: integer  # 0: cannot have resources; 1: may have resources; 2: must have resources
    is_active: { type: boolean, default: true }

  proj_detail_type:
    id: ~
    proj_category_id: { type: integer, foreignTable: proj_category, foreignReference: id, onDelete: restrict, onUpdate: cascade, required: false }
    code: { type: varchar(30), index: unique, required: true }  # this is used for the generation of odt documents and for the field names
    description: { type: varchar(255), required: true }
    label:       { type: varchar(100), required: true }
    is_required: { type: boolean, default: true }
    is_active:   { type: boolean, default: true }
    state_min:   integer
    state_max:   integer
    printed_in_submission_documents:  { type: boolean, default: true }
    printed_in_report_documents:      { type: boolean, default: true }
    example:     longvarchar
    missing_value_message: varchar(255)
    filled_value_message:  varchar(255)
    cols:        { type: integer, default: 80 }
    rows:        { type: integer, default: 5 }
    rank: integer

  proj_detail:
    id: ~
    schoolproject_id: ~
    proj_detail_type_id: ~
    content: longvarchar

  proj_deadline:
    id:  ~
    schoolproject_id:  ~
    user_id:          { type: integer, foreignTable: sf_guard_user, foreignReference: id, onDelete: restrict, onUpdate: cascade, required: true }
    original_deadline_date: date
    current_deadline_date: date
    description: varchar(255)
    notes:   longvarchar
    completed: boolean
    needs_attachment: boolean
    created_at: ~
    updated_at: ~

# completed should be changed in state: completed, overdue, canceled, etc.

  proj_financing:
    id: ~
    description: varchar(255)
    rank: { type: integer, required: true }

  proj_resource_type:
    id: ~
    description: varchar(255)
    shortcut: { type: varchar(5), required: true, index: unique }
    role_id: ~
    standard_cost: { type: decimal, size: 10, scale: 2 }
    measurement_unit: varchar(10)
    is_monetary: { type: boolean, default: true }
    rank: integer
    printed_in_submission_letters: { type: boolean, default: true }
    printed_in_charge_letters: { type: boolean, default: true }

  proj_resource:
    id: ~
    schoolproject_id:           ~
    proj_resource_type_id:      ~
    description:                varchar(255)
    charged_user_id:            { type: integer, foreignTable: sf_guard_user, foreignReference: id, onDelete: restrict, onUpdate: cascade, required: false }
    quantity_estimated:         { type: decimal, size: 10, scale: 2 }
    quantity_approved:          { type: decimal, size: 10, scale: 2 }
    amount_funded_externally:   { type: decimal, size: 10, scale: 2 }
    financing_notes:            varchar(255)
    quantity_final:             { type: decimal, size: 10, scale: 2 }
    standard_cost:              { type: decimal, size: 10, scale: 2 }
    is_monetary:                { type: boolean, default: true }
    scheduled_deadline:         date
    
  proj_activity:
    id: ~
    proj_resource_id: ~
    user_id: { type: integer, foreignTable: sf_guard_user, foreignReference: id, onDelete: restrict, onUpdate: cascade, required: true }
    beginning: timestamp
    quantity:  { type: decimal, size: 10, scale: 2 }
    notes: longvarchar
    created_at: ~
    acknowledged_at: timestamp
    acknowledger_user_id: { type: integer, foreignTable: sf_guard_user, foreignReference: id, onDelete: restrict, onUpdate: cascade, required: false }
    added_by_coordinator: { type: boolean, default: false }
    paper_log: { type: boolean, default: false }  # if set to true, this means that there is an alternative logging system for this activity

  proj_upshot:
    id: ~
    schoolproject_id: ~
    description: varchar(255)
    indicator: varchar(255)  # expectation
    upshot: varchar(255)
    evaluation: integer  # the minimum and the maximum are set in schoolproject table
    scheduled_date: date    

  informativecontent:
    # this table stores information about the type of informative messages that
    # can be sent to the users, provided that they gave their consent
    id: ~
    shortcut: { type: varchar(40), required: true, index: unique }
    description: varchar(255)
    
  consent:
    id: ~
    user_id: { type: integer, foreignTable: sf_guard_user, foreignReference: id, onDelete: restrict, onUpdate: cascade, required: true }
    informativecontent_id: ~
    given_at: timestamp
    method: { type: integer }
    # 1 = paper form filled and signed
    # 2 = on line form
    # 3 = email
    notes: longvarchar
    _uniques:
      ui: [ user_id, informativecontent_id ]

  doctype:
    id: ~
    title: { type: varchar(255), required: true }
    description: longvarchar
    is_active: { type: boolean, default: true }
    rank: integer

  document:
    id: ~
    doctype_id: ~
    code: { type: varchar(40), index: unique, required: true }
    title: { type: varchar(255), required: true }
    is_form: { type: boolean, default: false }
    docrevision_id: ~
    is_active: { type: boolean, default: true }
    is_deprecated: { type: boolean, default: false }
    notes: { type: varchar(255), required: false }
    syllabus_item_id: ~
  
  docrevision:
    id: ~
    document_id: { type: integer, foreignTable: document, foreignReference: id, onDelete: restrict, onUpdate: cascade, required: true }
    revision_number: { type: integer, required: true }
    revisioned_at: timestamp
    uploader_id:  { type: integer, foreignTable: sf_guard_user, foreignReference: id, onDelete: restrict, onUpdate: cascade, required: true }
    revision_grounds: { type: longvarchar, required: true }
    content: { type: longvarchar, required: false }
    content_type: integer  # 1=null (use attachment)   2=text/plain   3=text/html    4=text/x-web-markdown
    # the content can be set even if the document is stored in an attachment, for lucene indexes
    source_attachment_id: { type: integer, foreignTable: attachment_file, foreignReference: id, onDelete: restrict, onUpdate: cascade, required: false }
    published_attachment_id: { type: integer, foreignTable: attachment_file, foreignReference: id, onDelete: restrict, onUpdate: cascade, required: false }

  subnet:
    id:
    name:   { type: varchar(40), index: unique }
    ip_cidr:     { type: varchar(20), required: false }

  workstation:
    id:          
    name:    { type: varchar(40), index: unique }
    ip_cidr:   { type: varchar(20), required: true, index: unique }
    mac_address: { type: varchar(17), required: false, index: unique }
    is_enabled: { type: boolean, default: false }
    is_active:  { type: boolean, default: false }
    location_x: { type: float }
    location_y: { type: float }
    subnet_id: ~

  lanlog:
    id: ~
    user_id:          { type: integer, foreignTable: sf_guard_user, foreignReference: id, onDelete: restrict, onUpdate: cascade, required: true }
    workstation_id:  { type: integer, foreignTable: workstation, foreignReference: id, onDelete: restrict, onUpdate: cascade, required: true}
    created_at: 
    updated_at:
    is_online: { type: boolean, required: true, default: false }
    os_used: varchar(100)

  attachment_file:
    id:
    user_id: { type: integer, foreignTable: sf_guard_user, foreignReference: id, onDelete: restrict, onUpdate: cascade, required: true }
    base_table: integer
    base_id: integer
    internet_media_type: varchar
    original_file_name: varchar
    uniqid: { type: varchar(50), required: true, index: unique }
    file_size: bigint
    is_public: { type: boolean, default: false }
    created_at: ~
    md5sum: varchar(32)
    _uniques:
      tim: [base_table, base_id, md5sum]

  system_message:
    id:
    key: varchar(30)
    _uniques:
      key: [key]

  system_message_i18n:
    content: varchar(255)  

