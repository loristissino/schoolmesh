OPOK=0
OPFAILED=0

function msg_ok()
	{
	let "OPOK += 1"
	BASE=$(echo $0 | sed -e 's/.*schoolmesh_//' -e 's/_.*//')
	echo -e "\033[1;32m:-) $BASE » $@\033[0m"
	}

function msg_failed()
	{
	let "OPFAILED += 1"
	BASE=$(echo $0 | sed -e 's/.*schoolmesh_//' -e 's/_.*//')
	echo -e "\033[1;31m:-( $BASE » $@\033[0m"	
	}

function checkUsername()
{
getent passwd "$1" > /dev/null

if [ $? -ne 0 ] ; then
	msg_failed "Not a user: $1"
	exit 1
fi	
}

function checkNotUsername()
{
getent passwd "$1" > /dev/null

if [ $? -eq 0 ] ; then
	msg_failed "Already a user: $1"
	exit 2
fi	
}

function checkGroup()
{
getent group "$1" > /dev/null

if [ $? -ne 0 ] ; then
	msg_failed "Not a group: $1"
	exit 3
fi
}

function checkNotGroup()
{
getent group "$1" > /dev/null

if [ $? -eq 0 ] ; then
	msg_failed "Already a group: $1"
	exit 4
fi
}



function checkShell()
{
if [ $(grep -c "^$1\$" /etc/shells) -ne 1 ] ; then
	msg_failed "Not a valid shell: $1"
	exit 7
fi
}

function checkString()
{
if [ -z "$1" ] ; then
	msg_failed "Not a valid string: $1 ($2)"
	exit 11
fi
}

function checkInteger()
{
if [ -z "$1" ] ; then
	msg_failed "Not a valid number: $1 ($2)"
	exit 11
fi
if [ $(echo "$1" | grep -c "^[0-9]*$") -ne 1 ] ; then
	msg_failed "Not a valid number: $1"
	exit 12
fi
}

function checkDirectory()
{
if [ ! -d "$1" ] ; then
	msg_failed "Not a directory: $1"
	exit 21
fi
}

function checkNotFile()
{
if [ -e "$1" ] ; then
	msg_failed "File exists: $1"
	exit 22
fi
}

function checkFile()
{
if [ ! -e "$1" ] ; then
	msg_failed "File does not exist: $1"
	exit 23
fi
}


function userBelongsToGroup()
{
USER=$1
GROUP=$2
groups $USER | tr ' ' '\n' | grep "^$GROUP\$" > /dev/null
if [ $? -eq 0 ] ; then
	BELONGS=1
else
	BELONGS=0
fi	
}


function unexpectedError()
{
msg_failed $(basename $0) $@ '-- unexpected error'
exit 99
}

function randomPassword()
{
PWDTEMP=$(mktemp)
dd if=/dev/random of=$PWDTEMP bs=20 count=1 2>/dev/null
PASSWORD=$(md5sum $PWDTEMP | cut -c 1,2,3,4,5,6,7,8,9,10)
rm $PWDTEMP
}

