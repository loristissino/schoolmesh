<?php

/**
 * schoolmeshGenerateBackupScriptTask class.
 *
 * @package    schoolmesh
 * @subpackage lib.task
 * @author     Loris Tissino
 * @license    GNU GPLv3 -- see license/gpl.txt for details
 */

class schoolmeshGenerateBackupScriptTask extends sfBaseTask
{
  protected function configure()
  {

    $this->addOptions(array(
      new sfCommandOption('application', null, sfCommandOption::PARAMETER_REQUIRED, 'The application name'),
      new sfCommandOption('env', null, sfCommandOption::PARAMETER_REQUIRED, 'The environment', 'dev'),
      new sfCommandOption('connection', null, sfCommandOption::PARAMETER_REQUIRED, 'The connection name', 'propel'),
      // add your own options here
    ));
    
    $this->addArguments(array(
      new sfCommandArgument('scriptfile', sfCommandArgument::REQUIRED, 'The file to write the script to'),
      new sfCommandArgument('backupfile', sfCommandArgument::REQUIRED, 'The file to write the backup to'),
    ));

    $this->namespace        = 'schoolmesh';
    $this->name             = 'generate-backup-script';
    $this->briefDescription = 'Produces the script to use in order to backup the database';
    $this->detailedDescription = <<<EOF
This script produces on the standard output the script used to connect to the database from the command line.
It can be useful for backups or other routines.
EOF;
  }

  protected function execute($arguments = array(), $options = array())
  {
    // initialize the database connection
    $databaseManager = new sfDatabaseManager($this->configuration);
    $connection = $databaseManager->getDatabase($options['connection'] ? $options['connection'] : null)->getConnection();

    // add your code here
    $dbcm = new smDBConfManager($options['env']);
    
    $f=fopen($arguments['scriptfile'], 'w');
    fwrite($f, "#!/bin/bash\n");
    fwrite($f, "# this script is generated by the schoolmesh:generate-backup-script task\n");
    fwrite($f, $dbcm->getDumpCommand($arguments['backupfile']));
    fwrite($f, "\n");
    fclose($f);
    
    $this->logSection('file+', $arguments['scriptfile'], null, 'NOTICE');
  }

}
